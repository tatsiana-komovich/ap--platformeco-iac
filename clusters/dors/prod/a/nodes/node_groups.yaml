---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: application-nodes
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    minPerZone: 1
    maxPerZone: 3
    zones:
      - ru-central1-a
    classReference:
      kind: YandexInstanceClass
      name: application-nodes
  disruptions:
    approvalMode: Automatic
  chaos:
    mode: Disabled
  nodeTemplate:
    labels:
      node-role.k8s.lmru.tech/application: ''
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: system
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: YandexInstanceClass
      name: system
    maxPerZone: 2
    minPerZone: 1
    zones:
      - ru-central1-a
  disruptions:
    approvalMode: Automatic
  nodeTemplate:
    labels:
      node-role.deckhouse.io/system: ""
    taints:
      - effect: NoExecute
        key: dedicated.deckhouse.io
        value: system
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: jenkins-slave
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    minPerZone: 1
    maxPerZone: 1
    zones:
      - ru-central1-a
    classReference:
      kind: YandexInstanceClass
      name: jenkins-slave
  disruptions:
    approvalMode: Automatic
  chaos:
    mode: Disabled
  nodeTemplate:
    labels:
      node-role/jenkins-slave: ""
      node-role.k8s.lmru.tech/application: ''
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: devops-core-argocd
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    minPerZone: 1
    maxPerZone: 2
    zones:
      - ru-central1-a
      - ru-central1-b
      - ru-central1-d
    classReference:
      kind: YandexInstanceClass
      name: devops-core-argocd
  disruptions:
    approvalMode: Automatic
  cri:
    type: Containerd
  nodeTemplate:
    labels:
      node-role/argocd: ""
    taints:
      - effect: NoSchedule
        key: dedicated
        value: argocd
  chaos:
    mode: Disabled
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: devops-core-rundeck
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    minPerZone: 1
    maxPerZone: 2
    zones:
      - ru-central1-a
    classReference:
      kind: YandexInstanceClass
      name: application-nodes
  disruptions:
    approvalMode: Automatic
  cri:
    type: Containerd
  nodeTemplate:
    labels:
      node-role/rundeck: ""
      node-role.k8s.lmru.tech/application: ''
    taints:
      - effect: NoSchedule
        key: dedicated
        value: rundeck
  chaos:
    mode: Disabled
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: ghe-runners
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    minPerZone: 2
    maxPerZone: 8
    standby: "1"
    zones:
      - ru-central1-a
      - ru-central1-d
    classReference:
      kind: YandexInstanceClass
      name: ghe-runners
  disruptions:
    approvalMode: Automatic
  cri:
    type: Containerd
  nodeTemplate:
    labels:
      node-role/ghe-runners: ""
      node-role.k8s.lmru.tech/application: ''
    taints:
      - effect: NoSchedule
        key: dedicated
        value: ghe-runners
  chaos:
    mode: Disabled
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: moon-node
spec:
  nodeType: CloudEphemeral
  cloudInstances:
    maxPerZone: 36
    minPerZone: 14
    standby: 2
    zones:
      - ru-central1-a
    classReference:
      kind: YandexInstanceClass
      name: moon-node
  disruptions:
    approvalMode: Automatic
  chaos:
    mode: Disabled
  nodeTemplate:
    labels:
      node-role/moonNodes: ""
    taints:
      - effect: NoExecute
        key: dedicated
        value: "moonNodes"
