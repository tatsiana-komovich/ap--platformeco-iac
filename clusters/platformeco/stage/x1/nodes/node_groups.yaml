---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: node-tekton-pipelines
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: OpenStackInstanceClass
      name: node-tekton-pipelines
    maxPerZone: 1
    minPerZone: 1
    zones:
      - TEST_AZ_1
  disruptions:
    approvalMode: Automatic
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Auto"
  nodeTemplate:
    labels:
      threshold.extended-monitoring.deckhouse.io/disk-bytes-critical: "85"
      threshold.extended-monitoring.deckhouse.io/disk-bytes-warning: "80"
      node-role.k8s.lmru.tech/application: ''
    taints:
      - effect: NoExecute
        key: dedicated
        value: tekton-pipelines
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: application-nodes-big
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: OpenStackInstanceClass
      name: application-nodes-big
    maxPerZone: 5
    minPerZone: 1
  disruptions:
    approvalMode: Automatic
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Auto"
  nodeTemplate:
    labels:
      threshold.extended-monitoring.deckhouse.io/load-average-per-core-critical: "100"
      threshold.extended-monitoring.deckhouse.io/load-average-per-core-warning: "100"
      node-role.k8s.lmru.tech/application: ''
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: d8-loki
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: OpenStackInstanceClass
      name: d8-loki
    maxPerZone: 1
    minPerZone: 1
    zones:
      - TEST_AZ_1
  disruptions:
    approvalMode: Automatic
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Off"
  nodeTemplate:
    labels:
      node-role/d8-loki: ""
    taints:
      - effect: NoExecute
        key: dedicated
        value: d8-loki
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: loadbalancer
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: OpenStackInstanceClass
      name: loadbalancer
    maxPerZone: 1
    minPerZone: 1
    zones:
      - TEST_AZ_1
      - TEST_AZ_2
      - TEST_AZ_3
  disruptions:
    approvalMode: Automatic
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Off"
  nodeTemplate:
    labels:
      okmeter.io/enabled: ""
      node-role/metallb: ""
      node-role/loadbalancer: ""
    taints:
      - effect: NoExecute
        key: dedicated
        value: loadbalancer
  nodeType: CloudEphemeral
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: master
spec:
  disruptions:
    approvalMode: Manual
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Off"
  nodeTemplate:
    labels:
      node-role.kubernetes.io/control-plane: ""
      node-role.kubernetes.io/master: ""
      okmeter.io/enabled: ""
    taints:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
  nodeType: CloudPermanent
---
apiVersion: deckhouse.io/v1
kind: NodeGroup
metadata:
  name: system-az-1
spec:
  chaos:
    mode: Disabled
  cloudInstances:
    classReference:
      kind: OpenStackInstanceClass
      name: system
    maxPerZone: 3
    minPerZone: 1
    zones:
      - TEST_AZ_1
  disruptions:
    approvalMode: Automatic
  kubelet:
    containerLogMaxFiles: 4
    containerLogMaxSize: 50Mi
    resourceReservation:
      mode: "Off"
  nodeTemplate:
    labels:
      node-role.deckhouse.io/system: ""
      okmeter.io/enabled: ""
    taints:
      - effect: NoExecute
        key: dedicated.deckhouse.io
        value: system
  nodeType: CloudEphemeral
