---
prometheus:
  prometheus:
    enabled: true

    serviceAccount:
      create: true
      name: 'promaas-kong'

    service:
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 10800
    # servicePerReplica:
    #   enabled: true

    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/use-regex: 'true'
        nginx.ingress.kubernetes.io/affinity: 'cookie'
        nginx.ingress.kubernetes.io/affinity-mode: 'persistent'
        nginx.ingress.kubernetes.io/session-cookie-name: 'PROMETHEUSAFFINITY'
        nginx.ingress.kubernetes.io/session-cookie-path: '/prometheus'
        nginx.ingress.kubernetes.io/session-cookie-expires: '10800'
        nginx.ingress.kubernetes.io/session-cookie-max-age: '10800'
        nginx.ingress.kubernetes.io/rewrite-target: /$2
      hosts:
        - kong-metrics-stage.obs.lmru.tech
      paths:
        - /prometheus(/|$)(.*)
      pathType: ImplementationSpecific
      tls:
        - hosts:
            - 'kong-metrics-stage.obs.lmru.tech'

    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    serviceMonitor:
      selfMonitor: false
      additionalLabels:
        prometheus: main

    prometheusSpec:

      ruleNamespaceSelector:
        matchLabels:
          promaas-customer-name: kong

      scrapeInterval: '30s'
      scrapeTimeout: '10s'
      evaluationInterval: '30s'
      enableAdminAPI: false
      retention: 7d
      retentionSize: 300GB
      disableCompaction: true
      enableRemoteWriteReceiver: true
      externalUrl: 'https://kong-metrics-stage.obs.lmru.tech/prometheus/'
      logLevel: debug
      logFormat: json

      additionalArgs:
        - name: enable-feature
          value: auto-gomemlimit

      ## The remote_write spec configuration for Prometheus.
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#remotewritespec
      remoteWrite:
        - url: "https://mimir-metrics-stage.obs.lmru.tech/api/v1/push"
          headers:
            "X-Scope-OrgID": "kong-stage"
          basicAuth:
            username:
              name: kongstagemimir
              key: username
            password:
              name: kongstagemimir
              key: password
          writeRelabelConfigs:
            - sourceLabels: [__name__]
              regex: kong_kong.*
              action: "keep"
            - sourceLabels: [instance]
              regex: .*-preprod-.*
              action: "keep"
      # - url: http://remote1/push
      ## additionalRemoteWrite is appended to remoteWrite
      additionalRemoteWrite: []

      ## Allow out-of-order/out-of-bounds samples ingested into Prometheus for a specified duration
      ## See https://prometheus.io/docs/prometheus/lakong/configuration/configuration/#tsdb
      tsdb:
        outOfOrderTimeWindow: 30m

      image:
        registry: docker.art.lmru.tech
        repository: prometheus/prometheus
      # if not set appVersion field from Chart.yaml is  used
        tag: ''

      replicas: 1

      resources:
        requests:
          cpu: 4
          memory: 8Gi

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: network-ssd
            accessModes: ['ReadWriteOnce']
            resources:
              requests:
                storage: 300Gi

      priorityClassName: 'production-high'

      nodeSelector:
        node-role/prometheus-common: ''

      tolerations:
        - effect: NoSchedule
          key: dedicated
          operator: Equal
          value: prometheus
