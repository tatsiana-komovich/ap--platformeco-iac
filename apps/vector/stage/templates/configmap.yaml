apiVersion: v1
kind: ConfigMap
metadata:
  name: devops-core-vector-config
  labels:
    app.kubernetes.io/instance: devops-core-vector
    app.kubernetes.io/component: Agent
    app.kubernetes.io/managed-by: Helm
data:
  vector.yaml: |
      data_dir: /vector-data-dir
      api:
        enabled: true
        address: 127.0.0.1:8686
        playground: false
      sources:
        devops-core-audit:
          type: file
          include: 
            - /var/log/kube-audit/audit.log
          rotate_wait_secs: 60
        k8s_events-exporter:
          type: "kubernetes_logs"
          extra_label_selector: "app=events-exporter"
          extra_field_selector: "metadata.namespace=d8-monitoring,metadata.name!=$VECTOR_SELF_POD_NAME"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true 
          rotate_wait_secs: 60  
        k8s_logs_kube-system:
          type: "kubernetes_logs"
          extra_field_selector: "metadata.namespace=kube-system"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true 
          rotate_wait_secs: 60
        k8s_logs_d8-system:
          type: "kubernetes_logs"
          extra_field_selector: "metadata.namespace=d8-system"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true
          rotate_wait_secs: 60
        k8s_logs_d8-cloud-instance-manager:
          type: "kubernetes_logs"
          extra_field_selector: "metadata.namespace=d8-cloud-instance-manager"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true
          rotate_wait_secs: 60
        k8s_logs_d8-istio:
          type: "kubernetes_logs"
          extra_field_selector: "metadata.namespace=d8-istio"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true 
          rotate_wait_secs: 60
        istio_proxy_logs:
          type: "kubernetes_logs"
          annotation_fields:
            container_image: "image"
            container_name: "container"
            pod_ip: "pod_ip"
            pod_labels: "pod_labels"
            pod_name: "pod"
            pod_namespace: "namespace"
            pod_node_name: "node"
            pod_owner: "pod_owner"
          node_annotation_fields: 
            node_labels: ""
          glob_minimum_cooldown_ms: 1000
          use_apiserver_cache: true
          rotate_wait_secs: 60    
        journald:
          type: journald
          since_now: true
          include_units:
            - containerd-deckhouse.service
            - etcd.service
            - kubelet.service
            - bashible.service
          journal_directory: /var/log/journal
      transforms:
        devops-core-audit_parse_json:
          drop_on_abort: false
          inputs: ["devops-core-audit"]
          type: remap
          source: |-
            if !exists(.parsed_data) {
                structured, err = parse_json(.message)
                if err == null {
                  .parsed_data = structured
            } else {
                  .parsed_data = .message }
            }
        devops-core-audit_log_filter:
          type: filter
          inputs: ["devops-core-audit_parse_json"]
          condition: |-
            if exists(.parsed_data.user.username) && is_string(.parsed_data.user.username) {
                matched = false
                matched0, err = match(.parsed_data.user.username, r'^system.+$')
                if err != null {
                    true
                }
                matched = matched || matched0
                !matched
            } else {
                true
            }
        devops-core-audit_log_filter_01:   
          type: filter
          inputs: ["devops-core-audit_log_filter"]
          condition: |-
            match!(.parsed_data.verb, r'^(create|delete|update|patch)$') 
        add_extralabels:
          type:  "remap"
          inputs: ["journald"]
          source: |-
            .service_name = ._SYSTEMD_UNIT
        istio_proxy:
          type:  "filter"
          inputs: ["istio_proxy_logs"]
          condition: |-
            if is_boolean(.container) || is_float(.container) {
                data, err = to_string(.container);
                if err != null {
                    false;
                } else {
                    includes(["istio-proxy"], data);
                };
            } else if .container == null {
                false;
            } else {
                includes(["istio-proxy"], .container);
            }
      sinks:
        vector_out:
          type: loki
          inputs: 
            - devops-core-audit_log_filter_01
            - k8s_events-exporter
            - k8s_logs_kube-system
            - k8s_logs_d8-system
            - k8s_logs_d8-cloud-instance-manager
            - k8s_logs_d8-istio
            - istio_proxy
            - add_extralabels
          endpoint: "https://loki-x2.devops.lmru.tech"
          encoding: 
            only_fields: 
              - "message"
            codec: "text"
            timestamp_format: "rfc3339"
          auth: 
            password: "$LOKI_PASSWORD"
            strategy: "basic"
            user: "loki"
          labels:
            vector_agent: "devops-core-vector"
            unit: "{{`{{service_name}}`}}"
            namespace: "{{`{{ namespace }}`}}"
            pod: "{{`{{ pod }}`}}"
            container: "{{`{{container}}`}}"
            host: "{{`{{host}}`}}"
            stream: "{{`{{ stream }}`}}"
            userAgent: "{{`{{ parsed_data.userAgent }}`}}"
            username: "{{`{{ parsed_data.user.username }}`}}"
            verb: "{{`{{ parsed_data.verb }}`}}"
{{- with (get .Values "prometheus") }}
          {{- toYaml .settings.externalLabels | nindent 12}}
{{- end }}
          tls: 
            verify_hostname: true
            verify_certificate: true
          remove_label_fields: true
          out_of_order_action: "rewrite_timestamp"
          healthcheck: 
            enabled: false
          buffer: 
            max_size: 536870912
            type: "disk"
            when_full: "drop_newest"
        vector_out_vm_logs:
          type: loki
          inputs: 
            - devops-core-audit_log_filter_01
            - k8s_events-exporter
            - k8s_logs_kube-system
            - k8s_logs_d8-system
            - k8s_logs_d8-cloud-instance-manager
            - k8s_logs_d8-istio
            - istio_proxy
            - add_extralabels
          endpoint: "http://vm-logs-test.devops.lmru.tech:9428/insert/loki/"
          path: /api/v1/push?_msg_field=message.message&_time_field=timestamp&_stream_fields=source
          encoding: 
            only_fields: 
              - "message"
            codec: "text"
            timestamp_format: "rfc3339"
          auth: 
            password: "$VM_LOGS_PASSWORD"
            strategy: "basic"
            user: "vm-logs-insert"
          labels:
            vector_agent: "devops-core-vector"
            unit: "{{`{{service_name}}`}}"
            namespace: "{{`{{ namespace }}`}}"
            pod: "{{`{{ pod }}`}}"
            container: "{{`{{container}}`}}"
            host: "{{`{{host}}`}}"
            stream: "{{`{{ stream }}`}}"
            userAgent: "{{`{{ parsed_data.userAgent }}`}}"
            username: "{{`{{ parsed_data.user.username }}`}}"
            verb: "{{`{{ parsed_data.verb }}`}}"
{{- with (get .Values "prometheus") }}
          {{- toYaml .settings.externalLabels | nindent 12}}
{{- end }}
          tls: 
            verify_hostname: true
            verify_certificate: true
          remove_label_fields: true
          out_of_order_action: "rewrite_timestamp"
          healthcheck: 
            enabled: false
          buffer: 
            max_size: 536870912
            type: "disk"
            when_full: "drop_newest"
        wazuh_general:
          type: "socket"
          inputs: ["devops-core-audit_log_filter_01"]
          address: "10.203.61.117:8080"
          mode: "tcp"
          encoding:
            codec: "text"
          framing:
            method: "newline_delimited"
          remove_label_fields: true
          out_of_order_action: "rewrite_timestamp"
          healthcheck: 
            enabled: false
          buffer: 
            max_size: 536870912
            type: "disk"
            when_full: "drop_newest"
