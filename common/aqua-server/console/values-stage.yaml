---
imageCredentials:
  create: false
  name:
  repositoryUriPrefix: "docker-remote-aquasec.art.lmru.tech"
  registry: "docker-remote-aquasec.art.lmru.tech"
  username: ""
  password: ""

clusterRole:
  roleRef: ""

rbac:
  create: true
  enabled: true

openshift_route:
  create: false

serviceAccount:
  annotations: {}
  create: true
  name: ""

# enable only one of the modes
clustermode: ""
activeactive: ""

vaultSecret:
  enabled: false

admin:
  createSecret: true
  secretName: aqua-console-secrets
  token: "<path:preprod/data/console#license>"
  password: "<path:preprod/data/console#admin_password>"

dockerSock:
  # put true for mount docker socket.
  mount:
  path: /var/run/docker.sock

podSecurityPolicy:
  create: false

global:
  platform: k8s

  db:
    external:
      enabled: true
      name: "stage-aqua-db"
      host: "o-aquasec-db-01.ru-central1.internal"
      port: "5435"
      user: "stage-aqua-db"
      password: "<path:preprod/data/console#db-password>"
      auditName: "stage-aqua-audit-db"
      auditHost: "o-aquasec-db-01.ru-central1.internal"
      auditPort: "5435"
      auditUser: "stage-aqua-audit-db"
      auditPassword: "<path:preprod/data/console#audit-password>"
      pubsubName: "stage-aqua-db"
      pubsubHost: "o-aquasec-db-01.ru-central1.internal"
      pubsubPort: "5435"
      pubsubUser: "stage-aqua-db"
      pubsubPassword: "<path:preprod/data/console#db-password>"

    passwordFromSecret:
      enabled: false

    ssl: true
    sslmode: disable          # accepts: allow | prefer | require | verify-ca | verify-full (Default: Require)
    auditssl: true
    auditsslmode: disable     # accepts: allow | prefer | require | verify-ca | verify-full (Default: Require)
    pubsubssl: true
    pubsubsslmode: disable    # accepts: allow | prefer | require | verify-ca | verify-full (Default: Require)

    externalDbCerts:
      enable: false

    securityContext:
      runAsUser: 70
      runAsGroup: 70
      fsGroup: 11433
    container_securityContext:
      privileged: false
    env_size: "L"

gateway:
  enabled: false

web:
  replicaCount: 1
  # logLevel: debug
  image:
    repository: console
    tag: "2022.4.759"
    pullPolicy: Always

  service:
    type: ClusterIP
    labels: {}
    annotations: {}
    ports:
      - name: aqua-web
        port: 8080
        targetPort: 8080
        nodePort:
        protocol: TCP
      - name: aqua-web-ssl
        port: 443
        targetPort: 8443
        nodePort:
        protocol: TCP
  ingress:
    enabled: true
    apiVersion: networking.k8s.io/v1
    externalPort:
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - aquasec-yc-techno-stage.apps.lmru.tech
    path: /
    pathType: Prefix

  livenessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30

  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30

  resources:
    requests:
      cpu: 2000m
      memory: 1Gi
    limits:
      cpu: 3000m
      memory: 2Gi

  pdbApiVersion: policy/v1

  securityContext:
    runAsUser: 11431
    runAsGroup: 11433
    fsGroup: 11433
  container_securityContext: {}

  pdb:
    minAvailable: "1"

  TLS:
    enabled: false

  maintenance_db:
    name: "stage-aqua-db"

  extraEnvironmentVars:
    AQUA_FF_OVERRIDES: '{"SLK-51933":true}'

  extraSecretEnvironmentVars: []
    # - envName: ENV_NAME
    #   secretName: name
    #   secretKey: key

  extraVolumeMounts: []

  extraVolumes: []

envoy:
  enabled: false

sidecarContainers:
  enabled: false

initContainers:
  enabled: false
