{{- if not .Values.global.platform }}
{{ template "platform" .}}
{{- end }}
{{- if .Values.rbac.create }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-cluster-role
  labels:
    app: {{ .Release.Name }}
    aqua.component: server
{{ include "aqua.labels" . | indent 4 }}
    rbac.example.com/aggregate-to-monitoring: "true"
rules:
- apiGroups: [""]
  resources: ["nodes", "services", "endpoints", "pods", "deployments", "namespaces","componentstatuses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
{{- if and (.Values.podSecurityPolicy.create) (le .Capabilities.KubeVersion.Minor "24") }}
- apiGroups: ["policies"]
  resources: ["podsecuritypolicies"]
  verbs: ["use"]
  resourceNames:
    - {{ .Release.Name }}-psp
{{- end }}
{{- if eq .Values.global.platform "openshift" }}
- apiGroups: [""]
  resources: ["imagestreams", "imagestreams/layers"]
  verbs: ["get", "list", "watch"]
{{- end }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-role-binding
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    aqua.component: server
{{ include "aqua.labels" . | indent 4 }}
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  {{- if .Values.clusterRole.roleRef }}
  name: {{ .Values.clusterRole.roleRef }}
  {{- else }}
  name: {{ .Release.Name }}-cluster-role
  {{- end }}
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: {{ template "server.serviceAccount" . }}
{{- if and (.Values.podSecurityPolicy.create) (le .Capabilities.KubeVersion.Minor "24") }}
---
# PodSecurityPolicy
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Name }}-psp
  labels:
    app: {{ .Release.Name }}
    aqua.component: server
spec:
  privileged: {{ .Values.podSecurityPolicy.privileged }}
  allowedCapabilities:
  - '*'
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
{{- end }}
{{- if eq .Values.global.platform "tkg" }}
## TKG RBAC
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-rolebinding-vmware-system-privileged
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: psp:vmware-system-privileged
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts
{{- end -}}

{{- end }}
